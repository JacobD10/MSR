clear;
%clear classes;
%close all;
fclose all;clc;
delete(gcp('nocreate'));

%%
recording_type = 'simulated';
%recording_type = 'realworld';

%rooms = [4];
rooms = [ 1 ];

%setups = [1 2 3 4 5 6 0];
setups = [ 10.1, 10.2, 10.3, 11];
% setups = [ 10.2];
% setups = [ 10.3] ;
setups = [ 10.1 ];

for room = rooms
    
    pesqNumber = 0;
    Zone_Weights = 1e4;
    Zone_Weights_ = Zone_Weights; % Backup Variable
    if strcmpi(recording_type,'simulated')        
        Noise_Mask_Levels = [-40 -35 -30 -25 -20 -15 -10 -5 0 5 10 15 20];% 25 30 35 40];
    elseif strcmpi(recording_type,'realworld')
        Noise_Mask_Levels = [-40 -35 -30 -25 -20 -15 -10 -5 0 ];% 5 10 15 20];% 25 30 35 40];        
    end
    Noise_Mask_Levels_=Noise_Mask_Levels; %Backup variable
    
    array_type = 'circle';
    spkr_radius = 1.3;
    
    parametric_speaker = Parametric_Synthesis.parametric_soundfield;
    parametric_speaker.P1 = db2mag( 100 ); % 100dB amplitude parametric array loudspeaker
    parametric_speaker.P2 = db2mag( 100 ); % 100dB secondary amplitude
    if strcmp(array_type, 'circle')
        [x,y] = pol2cart(-90/180*pi, 0.6);
        x_ = sqrt(spkr_radius^2-y^2);
        th_c = atan2(y,-x_);
        th = th_c;
        spkr_spacing = []; %Auto-calculate spacing
    elseif strcmp(array_type, 'line')
        x_=spkr_radius;
        th_c = 180;
        th = atan2(-0.6,-spkr_radius);
        spkr_spacing = 0.001; %1mm spacing between adjacent loudspeakers
    end
    N_spkrs = 24;
    loudspeaker_layout = { ...
        'angleto_firstloudspeaker',      90, ...
        'angleof_loudspeakerarc',        180 * N_spkrs/(N_spkrs-1) , ...
        'numberof_loudspeakers',         N_spkrs, ...
        'loudspeaker_model',             'Genelec 8010A', ...
        'loudspeaker_radius',            spkr_radius, ...
        'loudspeaker_spacing',           spkr_spacing, ...
        'speaker_array_type',            array_type };
    other = { ...
        'resolution',                   100, ... % Minimum resolution of approx 50 for 8kHz signal to satisfy nyquist theorem. We choose 100 for good measure.
        'reproduction_radius',          1.0, ...
        'bright_weight',                1.0, ...
        'quiet_weight',                 0, ...
        'unattended_weight',            0.05, ...
        'brightzone_radius',            0.3, ...
        'brightzone_pos_distance',      0.6, ...
        'quietzone_radius',             0.3, ...
        'quietzone_pos_distance',       0.6, ...
        'maximum_frequency',            8000, ...
        'angleof_loudspeakerarrcentre', 180, ...
        'loudspeaker_object',           parametric_speaker };
    layout = {};
    
    Setups_ = {};
    
    Room_Setup = Room_Acoustics.Room;
    Room_Setup.NoReceivers = 32;
    
    %%
    if room == 1
        % % ROOM 1
        % % Anechoic
        Room_Setup.Room_Size = [10 10 10]; %Anechoic
        Room_Setup.Wall_Absorb_Coeff = 1.0;
        
    elseif room == 2
        % % ROOM 2
        % % Small Open Plan Office
        Room_Setup.Room_Size = [4 9 3];   %Small Open Plan Office
        Room_Setup.Wall_Absorb_Coeff = 0.3;
        
    elseif room == 3
        % % ROOM 3
        % % Medium Open Plan Office
        Room_Setup.Room_Size = [8 10 3];   %Medium Open Plan Office
        Room_Setup.Wall_Absorb_Coeff = 0.3;
        
    elseif room == 4
        % % ROOM 4
        % % Cafe / Restaurant
        Room_Setup.Room_Size = [9 14 3];   %Cafe/Restaurant
        Room_Setup.Wall_Absorb_Coeff = 0.3;
    end
    
    %%
    for scheme = setups
        if scheme == 0
            % % Setup and Privacy Scheme 0 (Benchmark)
            Zone_Weights = 0;
            Masker_Type = 'NoMask';
            layout = {'brightzone_pos_angle',        180, ...
                'quietzone_pos_angle',         0, ...
                'brightzone_source_angle',     0};
            Noise_Mask_Levels = [];
        elseif scheme == 1
            % % Setup and Privacy Scheme 1
            Masker_Type = 'FlatMask';
            layout = {'brightzone_pos_angle',        180, ...
                'quietzone_pos_angle',         0, ...
                'brightzone_source_angle',     0};
        elseif scheme == 2
            % % Setup and Privacy Scheme 2
            Masker_Type = 'ZoneWeightMask';
            layout = {'brightzone_pos_angle',        180, ...
                'quietzone_pos_angle',         0, ...
                'brightzone_source_angle',     0};
        elseif scheme == 3
            % % Setup and Privacy Scheme 3
            Masker_Type = 'FlatMask';
            layout = {'brightzone_pos_angle',        180, ...
                'quietzone_pos_angle',         0, ...
                'brightzone_source_angle',     15};
        elseif scheme == 4
            % % Setup and Privacy Scheme 4
            Masker_Type = 'ZoneWeightMask';
            layout = {'brightzone_pos_angle',        180, ...
                'quietzone_pos_angle',         0, ...
                'brightzone_source_angle',     15};
        elseif scheme == 5
            % % Setup and Privacy Scheme 5
            Masker_Type = 'FlatMask';
            layout = {'brightzone_pos_angle',        180, ...
                'quietzone_pos_angle',         0, ...
                'brightzone_source_angle',     90};
        elseif scheme == 6
            % % Setup and Privacy Scheme 6
            Masker_Type = 'ZoneWeightMask';
            layout = {'brightzone_pos_angle',        180, ...
                'quietzone_pos_angle',         0, ...
                'brightzone_source_angle',     90};
            
            %Test Schemes
        elseif scheme == 7
            % % Setup and Privacy Scheme 7
            Masker_Type = 'ZoneWeightMaskAliasCtrl';
            layout = {'brightzone_pos_angle',        180, ...
                'quietzone_pos_angle',         0, ...
                'brightzone_source_angle',     15};
        elseif scheme == 7.5
            % % Setup and Privacy Scheme 7.5
            Masker_Type = 'ZoneWeightMaskAliasCtrl';
            layout = {'brightzone_pos_angle',        90, ...
                'quietzone_pos_angle',         -90, ...
                'brightzone_source_angle',     0};
        elseif scheme == 7.6
            % % Setup and Privacy Scheme 7.6
            Masker_Type = 'ZoneWeightMaskAliasCtrl';
            layout = {'brightzone_pos_angle',        90, ...
                'quietzone_pos_angle',         -90, ...
                'brightzone_source_angle',     0};
        elseif scheme == 7.7
            % % Setup and Privacy Scheme 7.7
            Masker_Type = 'ZoneWeightMaskAliasCtrl';
            layout = {'brightzone_pos_angle',        90, ...
                'quietzone_pos_angle',         -90, ...
                'brightzone_source_angle',     0};
        elseif scheme == 8
            % % Setup and Privacy Scheme 8
            Masker_Type = 'ZoneWeightMaskAliasCtrlOffsetNoise';
            layout = {'brightzone_pos_angle',        180, ...
                'quietzone_pos_angle',         0, ...
                'brightzone_source_angle',     15};
        elseif scheme == 9
            % % Setup and Privacy Scheme 9
            Masker_Type = 'ZoneWeightMaskAliasCtrlStereoNoise';
            layout = {'brightzone_pos_angle',        180, ...
                'quietzone_pos_angle',         0, ...
                'brightzone_source_angle',     15};
            
            
            
        elseif scheme == 10.1
            % % Setup and Privacy Scheme 10
            % Multizone vs PAL Privacy Scheme 1 - Multizone Masker
            Signal_Types = { ...
                'NoMask'; ...
                'ZoneWeightMaskerAliasCtrl'};
            Noise_Mask_Levels = Noise_Mask_Levels_;
            speech_layout = { ...
                'brightzone_pos_angle',        90, ...
                'quietzone_pos_angle',         -90, ...
                'brightzone_source_angle',     0, ...
                'brightzone_source_type',      'pw'};
            N_spkrs = 24;
            speech_loudspeaker_layout = { ...
                'angleto_firstloudspeaker',      90, ...
                'angleof_loudspeakerarc',        180 * N_spkrs/(N_spkrs-1) , ...
                'numberof_loudspeakers',         N_spkrs, ...
                'loudspeaker_model',             'Genelec 8010A', ...
                'loudspeaker_radius',            spkr_radius, ...
                'loudspeaker_spacing',           spkr_spacing, ...
                'speaker_array_type',            array_type, ...
                'brightzone_source_dist',        x_, ...
                other{:}};
            masker_layout = { ...
                'brightzone_pos_angle',        -90, ...
                'quietzone_pos_angle',         90, ...
                'brightzone_source_angle',     0, ...
                'brightzone_source_type',      'pw'};
            masker_loudspeaker_layout = { ...
                'angleto_firstloudspeaker',      90, ...
                'angleof_loudspeakerarc',        180 * N_spkrs/(N_spkrs-1) , ...
                'numberof_loudspeakers',         N_spkrs, ...
                'loudspeaker_model',             'Genelec 8010A', ...
                'loudspeaker_radius',            spkr_radius, ...
                'loudspeaker_spacing',           spkr_spacing, ...
                'speaker_array_type',            array_type, ...
                'brightzone_source_dist',        x_, ...
                other{:}};
            
        elseif scheme == 10.2
            % % Setup and Privacy Scheme 10
            % Multizone vs PAL Privacy Scheme 2 - Parametric Masker
            Signal_Types = { ...
                'NoMask'; ...
                'ParametricMasker'};
            Noise_Mask_Levels = Noise_Mask_Levels_;
            speech_layout = { ...
                'brightzone_pos_angle',        90, ...
                'quietzone_pos_angle',         -90, ...
                'brightzone_source_angle',     0, ...
                'brightzone_source_type',      'pw'};
            N_spkrs = 24;
            speech_loudspeaker_layout = { ...
                'angleto_firstloudspeaker',      90, ...
                'angleof_loudspeakerarc',        180 * N_spkrs/(N_spkrs-1) , ...
                'numberof_loudspeakers',         N_spkrs, ...
                'loudspeaker_model',             'Genelec 8010A', ...
                'loudspeaker_radius',            spkr_radius, ...
                'loudspeaker_spacing',           spkr_spacing, ...
                'speaker_array_type',            array_type, ...
                'brightzone_source_dist',        x_, ...
                other{:}};
            masker_layout = { ...
                'brightzone_pos_angle',        -90, ...
                'quietzone_pos_angle',         90, ...
                'brightzone_source_angle',     180, ...
                'brightzone_source_type',      'ps'};
            masker_loudspeaker_layout = { ...
                'angleto_firstloudspeaker',     th/pi*180, ...
                'loudspeaker_radius',           x_, ...
                'numberof_loudspeakers',        1, ...
                'loudspeaker_model',            'Parametric', ...
                'loudspeaker_spacing',          0.01, ...
                'speaker_array_type',           'line', ...
                'brightzone_source_dist',        x_, ...
                other{:}};
            
        elseif scheme == 10.3
            % % Setup and Privacy Scheme 10
            % Multizone vs PAL Privacy Scheme 3 - HPF Parametric Masker
            Signal_Types = { ...
                'NoMask'; ...
                'ParametricMaskerAliasCtrlHPF'};
            Noise_Mask_Levels = Noise_Mask_Levels_;
            speech_layout = { ...
                'brightzone_pos_angle',        90, ...
                'quietzone_pos_angle',         -90, ...
                'brightzone_source_angle',     0, ...
                'brightzone_source_type',      'pw'};
            N_spkrs = 24;
            speech_loudspeaker_layout = { ...
                'angleto_firstloudspeaker',      90, ...
                'angleof_loudspeakerarc',        180 * N_spkrs/(N_spkrs-1) , ...
                'numberof_loudspeakers',         N_spkrs, ...
                'loudspeaker_model',             'Genelec 8010A', ...
                'loudspeaker_radius',            spkr_radius, ...
                'loudspeaker_spacing',           spkr_spacing, ...
                'speaker_array_type',            array_type, ...
                'brightzone_source_dist',        x_, ...
                other{:}};
            masker_layout = { ...
                'brightzone_pos_angle',        -90, ...
                'quietzone_pos_angle',         90, ...
                'brightzone_source_angle',     180, ...
                'brightzone_source_type',      'ps'};
            masker_loudspeaker_layout = { ...
                'angleto_firstloudspeaker',     th/pi*180, ...
                'loudspeaker_radius',           x_, ...
                'numberof_loudspeakers',        1, ...
                'loudspeaker_model',            'Parametric', ...
                'loudspeaker_spacing',          0.01, ...
                'speaker_array_type',           'line', ...
                'brightzone_source_dist',        x_, ...
                other{:}};
            
        elseif scheme == 11
            % % Setup and Privacy Scheme 11
            % Multizone & PAL Hybrid Masker
            Signal_Types = { ...
                'NoMask'; ...
                'ZoneWeightMaskerAliasCtrl'; ...
                'ParametricMaskerAliasCtrlHPF'};
            Noise_Mask_Levels = Noise_Mask_Levels_;
            speech_layout = { ...
                'brightzone_pos_angle',        90, ...
                'quietzone_pos_angle',         -90, ...
                'brightzone_source_angle',     0, ...
                'brightzone_source_type',      'pw'};
            N_spkrs = 24;
            speech_loudspeaker_layout = { ...
                'angleto_firstloudspeaker',      90, ...
                'angleof_loudspeakerarc',        180 * N_spkrs/(N_spkrs-1) , ...
                'numberof_loudspeakers',         N_spkrs, ...
                'loudspeaker_model',             'Genelec 8010A', ...
                'loudspeaker_radius',            spkr_radius, ...
                'loudspeaker_spacing',           spkr_spacing, ...
                'speaker_array_type',            array_type, ...
                'brightzone_source_dist',        x_, ...
                other{:}};
            masker_layout = { ...
                'brightzone_pos_angle',        -90, ...
                'quietzone_pos_angle',         90, ...
                'brightzone_source_angle',     180, ...
                'brightzone_source_type',      'ps'};
            masker_loudspeaker_layout = { ...
                'angleto_firstloudspeaker',      90, ...
                'angleof_loudspeakerarc',        180 * N_spkrs/(N_spkrs-1) , ...
                'numberof_loudspeakers',         N_spkrs, ...
                'loudspeaker_model',             'Genelec 8010A', ...
                'loudspeaker_radius',            spkr_radius, ...
                'loudspeaker_spacing',           spkr_spacing, ...
                'speaker_array_type',            array_type, ...
                'brightzone_source_dist',        x_, ...
                other{:}};
            masker2_layout = { ...
                'brightzone_pos_angle',        -90, ...
                'quietzone_pos_angle',         90, ...
                'brightzone_source_angle',     180, ...
                'brightzone_source_type',      'ps'};
            masker2_loudspeaker_layout = { ...
                'angleto_firstloudspeaker',     th/pi*180, ...
                'loudspeaker_radius',           x_, ...
                'numberof_loudspeakers',        1, ...
                'loudspeaker_model',            'Parametric', ...
                'loudspeaker_spacing',          0.01, ...
                'speaker_array_type',           'line', ...
                'brightzone_source_dist',        x_, ...
                other{:}};
            Setups_{3} = Speaker_Setup.createSetup({ masker2_layout{:}, masker2_loudspeaker_layout{:}});
            
            
        end
        
        Setups_{1} = Speaker_Setup.createSetup({ speech_layout{:}, speech_loudspeaker_layout{:}});
        Setups_{2} = Speaker_Setup.createSetup({ masker_layout{:}, masker_loudspeaker_layout{:}});
        
        %Room_Acoustics.Apply_RIRs.Reverberant_MSR_batchfunc( Room_Setup, Masker_Type, Speech_Setup, Zone_Weights, Noise_Mask_Levels);
        
        Room_Acoustics.Apply_RIRs.Reverberant_MSR_Analysis_batchfunc( Setups_, Room_Setup, Signal_Types, Zone_Weights, Noise_Mask_Levels, pesqNumber, recording_type);
        %Room_Acoustics.Apply_RIRs.Reverberant_MSR_Analysis_STI_batchfunc(Room_Size, Wall_Absorption_Coeff, mask_type, pw_angle, Noise_Mask_Levels);
        
    end
end